name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'  

      - name: Install dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"

      - name: Report code coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: '**/TestResults/*.coverage' # Utilisé pour récupérer le fichier de couverture

      - name: Install dotnet-sonarscanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Prepare SonarCloud analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Assurez-vous d'avoir ajouté ce secret dans les paramètres GitHub de votre projet
        run: dotnet-sonarscanner begin /k:"damien-d13_Morpion" /o:"damien-d13" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths="**/TestResults/*.coveragexml" -Dsonar.projectBaseDir="${{ github.workspace }}"

      - name: Run SonarScanner
        run: dotnet build --no-incremental

      - name: Complete SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet-sonarscanner end
